#include <Adafruit_NeoPixel.h>
#include <string.h>

const byte neopixelPin = 10; 
const unsigned int matz[10][10][3]={{{0,146,70},{0,146,70},{0,146,70},{155,212,182},{254,254,254},{254,254,254},{244,210,213},{206,43,55},{206,43,55},{206,43,55}},{{0,146,70},{0,146,70},{0,146,70},{155,212,182},{254,254,254},{254,254,254},{244,210,213},{206,43,55},{206,43,55},{206,43,55}},{{0,146,70},{0,146,70},{0,146,70},{155,212,182},{254,254,254},{254,254,254},{244,210,213},{206,43,55},{206,43,55},{206,43,55}},{{0,146,70},{0,146,70},{0,146,70},{155,212,182},{254,254,254},{254,254,254},{244,210,213},{206,43,55},{206,43,55},{206,43,55}},{{0,146,70},{0,146,70},{0,146,70},{155,212,182},{254,254,254},{254,254,254},{244,210,213},{206,43,55},{206,43,55},{206,43,55}},{{0,146,70},{0,146,70},{0,146,70},{155,212,182},{254,254,254},{254,254,254},{244,210,213},{206,43,55},{206,43,55},{206,43,55}},{{0,146,70},{0,146,70},{0,146,70},{155,212,182},{254,254,254},{254,254,254},{244,210,213},{206,43,55},{206,43,55},{206,43,55}},{{0,146,70},{0,146,70},{0,146,70},{155,212,182},{254,254,254},{254,254,254},{244,210,213},{206,43,55},{206,43,55},{206,43,55}},{{0,146,70},{0,146,70},{0,146,70},{155,212,182},{254,254,254},{254,254,254},{244,210,213},{206,43,55},{206,43,55},{206,43,55}},{{0,146,70},{0,146,70},{0,146,70},{155,212,182},{254,254,254},{254,254,254},{244,210,213},{206,43,55},{206,43,55},{206,43,55}}};
Adafruit_NeoPixel neopixel = Adafruit_NeoPixel(100, neopixelPin, NEO_GRB + NEO_KHZ800);

void setup() {
  Serial.begin(9600);
  neopixel.begin();
  ImpMat();
}

void loop() {    
  
}

void ImpMat(){
  for(int i=0;i<10;i++){
    for(int j=0;j<10;j++){
      if(i%2==0){
        neopixel.setPixelColor(j+(i*10), matz[i][j][0], matz[i][j][1], matz[i][j][2]);
        Serial.print(j+(i*10));
      }
      else{
        neopixel.setPixelColor(((i+1)*10)-(j+1), matz[i][j][0], matz[i][j][1], matz[i][j][2]);
      	Serial.print(((i+1)*10)-(j+1));
      }
      Serial.print(" ");
    }
  }

  neopixel.show();
  delay(2000);
  neopixel.clear();
}

