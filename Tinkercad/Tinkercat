#include <Adafruit_NeoPixel.h>
#include <string.h>

const byte neopixelPin = 10; 
int y = 0;
int x=255;
long int Tam=1252;
char mat[]="/255-255-255-/182-226-255-/47-175-255-/45-174-255-/45-174-255-/45-174-255-/45-174-255-/47-175-255-/181-226-255-/255-255-255-/181-226-255-/255-255-255-/182-226-255-/47-175-255-/45-174-255-/45-174-255-/47-175-255-/181-226-255-/255-255-255-/182-226-255-/47-175-255-/181-226-255-/255-255-255-/182-226-255-/47-175-255-/47-175-255-/181-226-255-/255-255-255-/182-226-255-/47-175-255-/45-174-255-/47-175-255-/181-226-255-/255-255-255-/182-226-255-/181-226-255-/255-255-255-/182-226-255-/47-175-255-/45-174-255-/45-174-255-/45-174-255-/47-175-255-/181-226-255-/255-255-255-/255-255-255-/182-226-255-/47-175-255-/45-174-255-/45-174-255-/45-174-255-/45-174-255-/47-175-255-/181-226-255-/255-255-255-/255-255-255-/182-226-255-/47-175-255-/45-174-255-/45-174-255-/45-174-255-/47-175-255-/181-226-255-/255-255-255-/182-226-255-/181-226-255-/255-255-255-/182-226-255-/47-175-255-/45-174-255-/47-175-255-/181-226-255-/255-255-255-/182-226-255-/47-175-255-/47-175-255-/181-226-255-/255-255-255-/182-226-255-/47-175-255-/181-226-255-/255-255-255-/182-226-255-/47-175-255-/45-174-255-/45-174-255-/47-175-255-/181-226-255-/255-255-255-/182-226-255-/255-255-255-/182-226-255-/47-175-255-/45-174-255-/45-174-255-/45-174-255-/45-174-255-/47-175-255-/181-226-255-";
Adafruit_NeoPixel neopixel = Adafruit_NeoPixel(100, neopixelPin, NEO_GRB + NEO_KHZ800);


void setup() {
  Serial.begin(9600);
  neopixel.begin();
  leer_mat();
}

void loop() {    
  
}

void ImpMat(){
  for(int i=0;i<20;i++){    
    for(int j=0;j<100;j++){
      	if(j%2==0)  neopixel.setPixelColor(j, x, 0, y); 
      	else  neopixel.setPixelColor(j, y, 0, x); 
            	  
    }
    neopixel.show();        
    delay(1000);
  	x-=10;
  	y+=10;
  }   
  neopixel.clear(); 
  neopixel.show();
  delay(100);     
}

void leer_mat(){
  unsigned int x=0, y=0;
  String values;
  unsigned int colors[10][10][3];
  for(long int i=0;i<Tam;i++){
    if(mat[i]=='/'){
      values = getPixel(i+1);
      colors[y][x][0]=getColors(values,0);
      colors[y][x][1]=getColors(values,1);
      colors[y][x][2]=getColors(values,2);
      Serial.print(colors[y][x][0]);
      Serial.print(colors[y][x][1]);
      Serial.print(colors[y][x][2]);
      Serial.println();
      if(x==10){x=0;y++;}
      else x++;
    }
  }
}
String getPixel(long int x){
  String pixel;
  for(int i=x;;i++){
    if(mat[i]!='/')pixel+=mat[i];
    else break;
  }
  return pixel;
}
unsigned int getColors(String Pixel, int Color){
  unsigned int RGB[3], c=0;
  String value="";
  for(int i=0;i<Pixel.length();i++){
    if(Pixel[i]=='-'){
      RGB[c]=value.toInt();
      c++;
      value="";
    }
    else{
      value+=Pixel[i];
    }
  }
  return RGB[Color];
}